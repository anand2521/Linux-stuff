#+TITLE:  How to set up a private cloud for IaaS
#+AUTHOR: Ashay Maheshwari
#+DATE: [2017-01-05  Fri]
#+PROPERTY: results output
#+PROPERTY: exports code
#+SETUPFILE: ./org-templates/level-0.org
#+options: ^:nil


* What are we going to learn today ??
  + Basics of Virtualization and Cloud Computing 
  + Setting up our own Dropbox - The ownCloud
  + Setting up our on Cloud service 
  

* What do you need ??
  + System with atleast 4 GB RAM
  + Ubuntu 14.04 OS 
  + Minimum 100 GB of Hard disk 
  + Basic knowledge working on Ubuntu 14.04 or any linux 
  + Editor like vim or vi or gedit
 

* Introduction to Virtualization ??

** What is Virtualization ??
   Virtualization is a combination of software and hardware
   engineering that creates Virtual Machines (VMs) - an abstraction of
   the computer hardware that allows a single machine to act as if it
   where many machines.
  

** What is without Virtualization ??
   [[./diagrams/without-virtualization.png]]


** How does Virtulization make Life@DataCentres easy ??


** Why Virtualization  
   + Reduced cost
   + Easier backup and disaster recovery 
   + Efficient IT Operations
   + Less Heat
   + Easy migrations 
   + Run multiple difference OS on a single machine 


** Lets understand the difference 
   [[./diagrams/virtualization-diff.png]]


** Hypervisors - Virtual Machine Monitors 
  The hypervisor (also called a virtual machine monitor) is the
  low-level program that allows multiple operating systems to run
  concurrently on a single host computer.

*** Type of hypervisor
   + type 1 virtualization - Bare metal or Native Hypervisor 
   + type 2 virtualization - Hosted Hypervisor
  
   |------+------------------------------------------------------------------+-------------------------------------------------|
   | S.No | Bare Metal                                                       | OS level                                        |
   |------+------------------------------------------------------------------+-------------------------------------------------|
   |    1 | Directly installed in Hardware                                   | Installed and runs on host Operating System     |
   |------+------------------------------------------------------------------+-------------------------------------------------|
   |    2 | The hypervisor is small as its main task is sharing and          | OS manages the resource allocation              |
   |      | managing hardware resources between different operating systems. |                                                 |
   |------+------------------------------------------------------------------+-------------------------------------------------|
   |    3 | A major advantage is that any problems in one virtual machine    | Independent of VM                               |
   |      | or guest operating system do not affect the other guest          |                                                 |
   |      | operating systems running on the hypervisor.                     |                                                 |
   |------+------------------------------------------------------------------+-------------------------------------------------|
   |    4 | Any issue in hypervisor will destroy the full VMs running in it  | Any issue with OS will destroy all the VMs      |
   |      |                                                                  | hosted on it                                    |
   |------+------------------------------------------------------------------+-------------------------------------------------|
   |    5 | Examples - VMware ESXi Server, Microsoft Hyper-V,                | Examples VMware Workstation,  Microsoft Virtual |
   |      | Citrix/Xen Server                                                | PC, Oracle Virtual Box                          |
   |------+------------------------------------------------------------------+-------------------------------------------------|
  
   
            
          
   

   
** Types of Virtualization
*** On the basis of activity 
   + Storage Virtualization 
   + Compute Virtualization 
   + Network Virtualization 

*** On the basis of operational way
   + VM based virtualization
   + Container based Virtualization


** Examples Virtualization technologies  
   + VM based virtualization ::
     Citrix, VM Ware, Oracle Virtual Box
   + Container based Virtualization  ::
     Docker, OpenVZ, LxC


** Problem Solved -- No way
    [[./diagrams/funny-sys-admin.jpg]]


* Introduction to Cloud Computing 

** What is Computing ??

   Computing is the process of manipulation/caculation.  2+2 is
   computating/computaiton. That's what computers do.
   

** What is Cloud ??
   "The Cloud" or "The Network Cloud" is an IT infrastrucuture sitting
   somewhere which contains compute resources like servers, storage,
   network, memory etc.
   
   [[./diagrams/cloud.jpg]]
   

** What it is not ??
 [[./diagrams/cloud-what-it-is-not.png]]


** What is Cloud Computing ??
   Cloud computing is the delivery of computing services—servers,
   storage, databases, networking, software, analytics and more—over
   the Internet (“the cloud”).


** What without Cloud computing ??
   + No Google Drives
   + No Dropbox, Instagram, 
   + Weak IT Operations -
    

** Advantages of Cloud computing ??


** Three layers of Cloud Computing or three platforms of cloud computing 
*** IaaS - Infrastrucuture as a Service 
    +  Cloud infrastructure services, known as Infrastructure as a
       Service (IaaS), are self-service models for accessing,
       monitoring, and managing remote datacenter infrastructures,
       such as compute (virtualized or bare metal), storage,
       networking, and networking services (e.g. firewalls).
    + Instead of having to purchase hardware outright, users can
      purchase IaaS based on consumption, similar to electricity or
      other utility billing.
    +  Examples - AWS, Microsoft Azure, Digital Ocean
*** PaaS - Platform as a Service 
 
    + Platform as a service (PaaS) is a cloud computing model that
      delivers applications over the Internet.
    + In a PaaS model, a cloud provider delivers hardware and software
      tools -- usually those needed for application development -- to
      its users as a service.
    + A PaaS provider hosts the hardware and software on its own
      infrastructure. As a result, PaaS frees users from having to
      install in-house hardware and software to develop or run a new
      application.
    + Examples - Appear IQ, Mendix, Amazon Web Services (AWS) Elastic
      Beanstalk, Google App Engine and Heroku.
       
*** SaaS - Software as a Service 
    + Cloud application services, SaaS uses the web to deliver
      applications that are managed by a third-party vendor and whose
      interface is accessed on the clients’ side.
    + Most SaaS applications can be run directly from a web browser
      without any downloads or installations required, although some
      require plugins.
    + SaaS Examples: Google Apps, Salesforce, Workday, Concur, Citrix
      GoToMeeting, Cisco WebEx

** Well known Cloud service provider 
   + AWS - Amazon Web Services, Digital Ocean, Microsoft Azure, Google Cloud


** Types of Cloud
   + Public Cloud :: AWS, Digital Ocean, Microsoft Azure
   + Private Cloud :: Enterprise Cloud
   + Hybrid Cloud :: Mix of Public and private cloud 


* Lets setup our own DropBox - OwnCloud 
  + OwnCloud is a web application that can store and serve content
    from a centralized location, much like Dropbox. 
  + The difference is that ownCloud 7 allows you to host the serving
    software on your own machines, taking the trust issues out of
    putting your personal data someone else's server.
  + Install OwnCloud on your local machine 
    #+BEGIN_SRC command
    cd /tmp
    wget http://download.opensuse.org/repositories/isv:ownCloud:community/xUbuntu_14.04/Release.key
    sudo apt-key add - < Release.key
    sudo sh -c "echo 'deb http://download.opensuse.org/repositories/isv:/ownCloud:/community/xUbuntu_14.04/ /' >> /etc/apt/sources.list.d/owncloud.list"
    sudo apt-get update
    sudo apt-get install owncloud -y
    sudo apt-get install mariadb-server -y
    
    #+END_SRC
  + Configure your mysql database 
    #+BEGIN_SRC command
    sudo mysql -u root -p
    CREATE DATABASE owncloud;
    GRANT ALL ON owncloud.* to 'owncloud'@'localhost' IDENTIFIED BY 'database_password';
    exit
    #+END_SRC
  + Access
    #+BEGIN_SRC command
    http://your-ip/owncloud
    #+END_SRC
  

* Setting up the Hybrid Cloud 

** What do you need ??
   + Credit Card - Money 
   + Knowledge on using public cloud 
   + Decision on using one of the Public Cloud service provider.
   + Active Internet connection.

** A tour to Amazon Web Services  


* Lets set our Enterprise Cloud 

** What do we need ??
   + A machine with below given configurations -
     #+BEGIN_SRC command
     Operating system - Ubuntu 14.04 ( any Linux, recommended - Ubutnu 14.04 / CentOS 6.X or 7 )
     RAM - Minimum of 4 GB, recommended 8 GB
     Hard disk - Minimum of 250 GB, recommended 500 GB
     Active Internet Connection 
     #+END_SRC


** Available Options 
   + Openstack 
   + Apache Cloud stack 


** Installing Apache Cloudstack on Ubuntu 14.04 

*** Setup and configure your virtual machine 
   + Create a Ubuntu 14.04 virtual machine in Oracle Virtual Box 
   + Setup the interface files 
     #+BEGIN_SRC command
     vim /etc/network/interfaces
     #+END_SRC
   + Write the following configuration in your /etc/network/interfaces file 
     #+BEGIN_SRC command
     auto lo
     iface lo intet loopback 
 
     auto eth0
     iface eth0 inet static
            address 192.168.56.10
            netmask 255.255.255.0

     auto eth1
     iface eth1 inet dhcp 
     #+END_SRC
   + Turn off your your Virtual Machine
   + Go to File-->Preferences-->Network-->Host only Networks 
   + Click on the + symbol and create a "Host only Adapter"
   + Double click on the "host only Adapter" you created just now 
   + Give 
     #+BEGIN_SRC command
     IPv4 Address as - 192.168.56.1
     Network Mask - 255.255.255.0
     #+END_SRC
   + Click Settings-->Network-->Adapter 1
   + Select Host only Adapter from the Drop down and select your "Host
     Only Adapter" name.
   + Select Adapter Type to "Paravirtualized Network"
   + Allow Premiscuos mode 
   + Check on "Cable Connected" 
   + Click on "Adapter 2"
   + Select NAT and click OK.
   + Start your Virtual Machine 
   

*** Install necessary packages 
    + Update sources list 
      #+BEGIN_SRC command
      sudo apt-get update 
      #+END_SRC
    + Add source repository to sources list
      #+BEGIN_SRC command
      sudo vim /etc/apt/sources.list.d/cloudstack.list
      #+END_SRC
    + Write the deb package URL in this file 
      #+BEGIN_SRC command
      deb http://cloudstack.apt-get.eu/ubuntu precise 4.4
      #+END_SRC
    + Become root user
      #+BEGIN_SRC command
      sudo su -
      #+END_SRC
    + Download the sources using wget command 
      #+BEGIN_SRC command
      wget -O - http://cloudstack.apt-get.eu/release.asc | apt-key add -
      #+END_SRC
    + Update 
      #+BEGIN_SRC command
      apt-get update
      #+END_SRC
    + Install Cloudstack management 
      #+BEGIN_SRC command
      apt-get  install cloudstack-management
      #+END_SRC
    + Install MySQL server 
      #+BEGIN_SRC command
      apt-get install mysql-server 
      #+END_SRC
    + Open file /etc/mysql/my.cnf 
      #+BEGIN_SRC command
      [mysqld]
      innodb_rollback_on_timeout=1
      innodb_lock_wait_timeout=600
      max_connection=350
      log-bin=mysql-bin
      binlog-format = 'ROW'
      #+END_SRC
    + Restart mysql service 
      #+BEGIN_SRC command
      service mysql restart
      #+END_SRC
    + Configure mysql 
      #+BEGIN_SRC command
      mysql_secure_installation
      #+END_SRC
    + Setup the Cloudstack database
      #+BEGIN_SRC 
      cloudstack-setup-databases cloud:<your-password>@localhost --deploy-as=root:<your-password> -i 192.168.56.10 
      #+END_SRC
    + Run cloudstack management 
      #+BEGIN_SRC command
      sudo cloudstack-setup-management
      #+END_SRC  

*** Setitng up Storage NFS 
    + Create directory
      #+BEGIN_SRC command
      sudo mkdir -p /export/primary 
      sudo mkdir -p /export/secondary
      #+END_SRC 
    + Install NFS-Kernel-server
      #+BEGIN_SRC command
      sudo apt-get install nfs-kernel-server
      #+END_SRC
    + Open file  /etc/exports
      #+BEGIN_SRC command
      sudo vim /etc/exports
      /export *(rw,async,no_root_squash,no_subtree_check)
      #+END_SRC
    + Install NFS common
      #+BEGIN_SRC command
      sudo apt-get install nfs-common
      #+END_SRC
    + Comfigure nfs-common
      #+BEGIN_SRC command
      sudo vim /etc/default/nfs-common 
      STATDOPTS="--port 662 --outgoing-port  2020
      NEED_STATD=yes
      #+END_SRC
    + Configure modprob lock 
      #+BEGIN_SRC command
      sudo vim /etc/modprobe.d/lockd.conf
      options lockd nlm_udpport=32769 nlm_tcpport=32803
      #+END_SRC 
    + Restart NFS service 
      #+BEGIN_SRC 
      service nfs-kernel-server restart
      #+END_SRC 
    + Check your mounts using show mount
      #+BEGIN_SRC command
      showmount -e 127.0.0.1
      #+END_SRC
    + Create directories in /mnt/
      #+BEGIN_SRC command
      sudo mkdir -p /mnt/primary
      sudo mkdir -p /mnt/secondary
      #+END_SRC
    + Add mount points in /etc/fstab
      #+BEGIN_SRC command
      sudo vim /etc/fstab
      #+END_SRC
    + Add the following lines 
      #+BEGIN_SRC command
      192.168.56.10:/export/primary    /mnt/primary   nfs  rsize=8192,timeo=14,intr,vers=3,noauto   0   2 
      192.168.56.10:/export/secondary    /mnt/secondary   nfs  rsize=8192,timeo=14,intr,vers=3,noauto   0   2 
      #+END_SRC
    + Mount the folder/partitions
      #+BEGIN_SRC command
      sudo mount /mnt/primary
      sudo mount /mnt/secondary
      #+END_SRC



*** Initiate a KVM image in storage 
   + Configure cloudstack to point to the storage space and download one
     #+BEGIN_SRC command
     sudo /usr/share/cloudstack-common/scripts/storage/secondary/cloud-install-sys-tmplt -m /mnt/secondary -u http://cloudstack.apt-get.eu/systemvm/4.4/systemvm64template-4.4.1-7-kvm.qcow2.bz2 -h kvm -F
     #+END_SRC
   + Start cloudstck service 
     #+BEGIN_SRC command
     sudo service cloudstack-management start
     #+END_SRC
   
*** Access Cloudstack GUI and install 
    + Access cloudstack GUI using Web browser
      #+BEGIN_SRC command
      URL - http://<your-ip>:8080/client
      #+END_SRC
    + Provide username and password default is (admin,password)
    + Change your password 
    + Add Zone 
      #+BEGIN_SRC command
      Name   : czone
      DNS 1  : 192.168.56.1
      Internal  DNS 1 : 192.168.56.1 
      #+END_SRC
    + Add Pod
      #+BEGIN_SRC command
      Name : cpod
      Gateway : 192.168.56.1
      Netmask 255.255.255.0  
      IP Range - 192.168.56.160 to 192.168.56.169 
      #+END_SRC
    + Add guest network 
      #+BEGIN_SRC command
      Gateway : 192.168.56.1
      Netmask : 255.255.255.0
      IP Range : 192.168.56.170 to 192.168.56.230
      #+END_SRC
    + Add Cluster 
      #+BEGIN_SRC command
      Hypervisor : KVM
      Name : ccluster
      #+END_SRC
    + Add host
      #+BEGIN_SRC command
      Name : csmgmt
      Username : root
      Password :  
      #+END_SRC
    + Add Primary storage 
      #+BEGIN_SRC command
      Name : cprimary
      Protocol : NFS
      Scope : Cluster
      Server : 192.168.56.10
      Path : /export/primary
      #+END_SRC
    + Add Secondary storage
      #+BEGIN_SRC command
      NFS Server : 192.168.56.10
      Provider : NFS
      Path : /export/secondary
      #+END_SRC
    + Click Launch 
   

*** Install Cloudstack agent 
    #+BEGIN_SRC command
    sudo apt-get install cloudstack-agent 
    #+END_SRC

*** Install and configure KVM
    + Installation
      #+BEGIN_SRC command
      sudo apt-get install qemu-kvm
      #+END_SRC
    + Configure 
      #+BEGIN_SRC command
      sudo vim /etc/libvirt/qemu.conf
      Uncomment <vmc_listen = "0.0.0.0">
      #+END_SRC
    
      #+BEGIN_SRC command
      sudo vim /etc/libvirt/libvirtd.conf
      Uncomment <listen_tls = 0>
      Uncomment <listen_tcp = 1>
      tcp_port = "16509"
      mdns_adv = 0
      auth_tcp = "none"
      #+END_SRC

      #+BEGIN_SRC command
      sudo vim /etc/default/libvirt-bin
      libvirtd_opts="-d  -l"
      #+END_SRC
    
      #+BEGIN_SRC command
      sudo ln -s /etc/apparmor.d/usr.sbin.libvirtd /etc/apparmor.d/disable/
      sudo ln -s /etc/apparmor.d/usr.lib.libvirt.virt-aa-helper /etc/apparmor.d/disable/
      #+END_SRC

      #+BEGIN_SRC command
      sudo apparmor_parser -R /etc/apparmor.d/usr.sbin.libvirtd
      sudo apparmor_parser -R /etc/apparmor.d/usr.lib.libvirt.virt-aa-helper
      #+END_SRC
      
    + Restart libvirt service 
      #+BEGIN_SRC command
      sudo service libvirt-bin restart
      #+END_SRC 
  
      #+BEGIN_SRC command
      sudo ufw allow proto tcp from any to any port 22
      sudo ufw allow proto tcp from any to any port 1798
      sudo ufw allow proto tcp from any to any port 16509
      sudo ufw allow proto tcp from any to any port 5900:6100
      sudo ufw allow proto tcp from any to any port 49152:49216
      #+END_SRC

    + Reboot your machine 

* References 
  + https://www.howtoforge.com/how-to-install-owncloud-7-on-ubuntu-14.04
  + https://apprenda.com/library/paas/iaas-paas-saas-explained-compared/
  
