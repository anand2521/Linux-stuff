#+Title: Docker basic commands 
#+Date: November 18, 2016
#+Author: Ashay Maheshwari

* Introduction 
  The following document contains the basic commands used in docker as
  a docker client.

* Informative commands 
** docker help
#+BEGIN_SRC command
[root@localhost ~]# docker --help
Usage: docker [OPTIONS] COMMAND [arg...]
       docker [ --help | -v | --version ]

A self-sufficient runtime for containers.

Options:

  --config=~/.docker              Location of client config files
  -D, --debug                     Enable debug mode
  -H, --host=[]                   Daemon socket(s) to connect to
  -h, --help                      Print usage
  -l, --log-level=info            Set the logging level
  --tls                           Use TLS; implied by --tlsverify
  --tlscacert=~/.docker/ca.pem    Trust certs signed only by this CA
  --tlscert=~/.docker/cert.pem    Path to TLS certificate file
  --tlskey=~/.docker/key.pem      Path to TLS key file
  --tlsverify                     Use TLS and verify the remote
  -v, --version                   Print version information and quit

Commands:
    attach    Attach to a running container
    build     Build an image from a Dockerfile
    commit    Create a new image from a container's changes
    cp        Copy files/folders between a container and the local filesystem
    create    Create a new container
    diff      Inspect changes on a container's filesystem
    events    Get real time events from the server
    exec      Run a command in a running container
    export    Export a container's filesystem as a tar archive
    history   Show the history of an image
    images    List images
    import    Import the contents from a tarball to create a filesystem image
    info      Display system-wide information
    inspect   Return low-level information on a container, image or task
    kill      Kill one or more running containers
    load      Load an image from a tar archive or STDIN
    login     Log in to a Docker registry.
    logout    Log out from a Docker registry.
    logs      Fetch the logs of a container
    network   Manage Docker networks
    node      Manage Docker Swarm nodes
    pause     Pause all processes within one or more containers
    port      List port mappings or a specific mapping for the container
    ps        List containers
    pull      Pull an image or a repository from a registry
    push      Push an image or a repository to a registry
    rename    Rename a container
    restart   Restart a container
    rm        Remove one or more containers
    rmi       Remove one or more images
    run       Run a command in a new container
    save      Save one or more images to a tar archive (streamed to STDOUT by default)
    search    Search the Docker Hub for images
    service   Manage Docker services
    start     Start one or more stopped containers
    stats     Display a live stream of container(s) resource usage statistics
    stop      Stop one or more running containers
    swarm     Manage Docker Swarm
    tag       Tag an image into a repository
    top       Display the running processes of a container
    unpause   Unpause all processes within one or more containers
    update    Update configuration of one or more containers
    version   Show the Docker version information
    volume    Manage Docker volumes
    wait      Block until a container stops, then print its exit code

Run 'docker COMMAND --help' for more information on a command.

#+END_SRC
** docker version
   Mention the version details of docker client and daemon.
   #+BEGIN_SRC command
$ docker version 
Client:
 Version:      1.12.3
 API version:  1.24
 Go version:   go1.6.3
 Git commit:   6b644ec
 Built:        
 OS/Arch:      linux/amd64

Server:
 Version:      1.12.3
 API version:  1.24
 Go version:   go1.6.3
 Git commit:   6b644ec
 Built:        
 OS/Arch:      linux/amd64

  #+END_SRC
  
** docker info
   #+BEGIN_SRC command
$ docker info
 Containers: 0
 Running: 0
 Paused: 0
 Stopped: 0
Images: 2
Server Version: 1.12.3
Storage Driver: devicemapper
 Pool Name: docker-8:3-9699599-pool
 Pool Blocksize: 65.54 kB
 Base Device Size: 10.74 GB
 Backing Filesystem: xfs
 Data file: /dev/loop0
 Metadata file: /dev/loop1
 Data Space Used: 178 MB
 Data Space Total: 107.4 GB
 Data Space Available: 107.2 GB
 Metadata Space Used: 786.4 kB
 Metadata Space Total: 2.147 GB
 Metadata Space Available: 2.147 GB
 Thin Pool Minimum Free Space: 10.74 GB
 Udev Sync Supported: true
 Deferred Removal Enabled: false
 Deferred Deletion Enabled: false
 Deferred Deleted Device Count: 0
 Data loop file: /var/lib/docker/devicemapper/devicemapper/data
 WARNING: Usage of loopback devices is strongly discouraged for production use. Use `--storage-opt dm.thinpooldev` to specify a custom block storage device.
 Metadata loop file: /var/lib/docker/devicemapper/devicemapper/metadata
 Library Version: 1.02.107-RHEL7 (2016-06-09)
Logging Driver: json-file
Cgroup Driver: cgroupfs
Plugins:
 Volume: local
 Network: host bridge null overlay
Swarm: inactive
Runtimes: runc
Default Runtime: runc
Security Options: seccomp
Kernel Version: 3.10.0-327.36.3.el7.x86_64
Operating System: CentOS Linux 7 (Core)
OSType: linux
Architecture: x86_64
CPUs: 4
Total Memory: 3.506 GiB
Name: localhost.localdomain
ID: ZESM:JBAF:UFX5:K23J:X37E:VVV3:UKHL:6B6Z:FKWF:OIQK:EE7U:SE5F
Docker Root Dir: /var/lib/docker
Debug Mode (client): false
Debug Mode (server): false
Http Proxy: http://proxy.iiit.ac.in:8080/
Https Proxy: http://proxy.iiit.ac.in:8080/
Registry: https://index.docker.io/v1/
WARNING: bridge-nf-call-iptables is disabled
WARNING: bridge-nf-call-ip6tables is disabled
Insecure Registries:
 127.0.0.0/8

   #+END_SRC
** docker images
   Lists the docker images locally available in repository.
#+BEGIN_SRC command
$ docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
ubuntu              latest              e4415b714b62        36 hours ago        128.1 MB
hello-world         latest              c54a2cc56cbb        4 months ago        1.848 kB
#+END_SRC

** docker ps 
+ Lists the containers both running and stopped ::
#+BEGIN_SRC command
[root@localhost ~]# docker ps -a 
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                       PORTS               NAMES
bdc481e01420        ubuntu              "bash"              2 minutes ago       Exited (127) 6 seconds ago                       sick_minsky
#+END_SRC

+ Lists running container ::
#+BEGIN_SRC command
[root@localhost ~]# docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
a0973e059c14        ubuntu              "bash"              21 seconds ago      Up 18 seconds                           hungry_ardinghelli
#+END_SRC

+ Info of last container you ran ::
#+BEGIN_SRC command
[root@localhost ~]# docker ps -l
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
a0973e059c14        ubuntu              "bash"              44 seconds ago      Up 41 seconds                           hungry_ardinghelli
#+END_SRC

+ Lists container IDs of running and stopped containers ::
#+BEGIN_SRC command
[root@localhost ~]# docker ps -aq --no-trunc
a0973e059c14f66a049f4e62e3a0001ab573659ced6a8377226e147ee4335967
bdc481e014208a2db57d482a417b6a608ce72a0e44a3a605236ea60ab2516337
#+END_SRC


* Significant docker operations
** Exploring a container
*** docker run command 
   + List docker images
     #+BEGIN_SRC command
[root@localhost ~]# docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
ubuntu              latest              e4415b714b62        37 hours ago        128.1 MB
hello-world         latest              c54a2cc56cbb        4 months ago        1.848 kB
     #+END_SRC
   + Select an image and run a container
     #+BEGIN_SRC command
[root@localhost ~]# docker run -i -t ubuntu bash 
root@bdc481e01420:/# 
root@bdc481e01420:/# 
root@bdc481e01420:/# echo "hello world"
hello world
root@bdc481e01420:/# 
     
     #+END_SRC
     
*** doc
